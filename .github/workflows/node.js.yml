name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  run_tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    - name: 'Create env file'
      run: |
        touch .env
        echo APP_NAME='app' >> .env
        echo APP_SALT_ROUNDS=12 >> .env
        echo APP_PREFERRED_DATABASE=mongodb >> .env
        echo APP_DEBUG=true >> .env
        echo APP_SECRET_KEY='app_secret_key' >> .env
        echo APP_AUTH_TOKEN_DURATION_DAYS=7 >> .env
        echo API_PORT=5000 >> .env
        echo MYSQL_HOST="mysql" >> .env
        echo MYSQL_PORT=3306 >> .env
        echo MYSQL_USER="user" >> .env
        echo MYSQL_PASSWORD="sqlP4SS" >> .env
        echo MYSQL_DB_NAME="db" >> .env
        echo MONGO_CONNECTION_URI='mongodb://host.docker.internal:27017/app' >> .env
        echo REDIS_HOST='host.docker.internal' >> .env
        echo REDIS_PORT=6379 >> .env
        echo REDIS_PASSWORD='' >> .env
        echo KAFKA_BROKERS='kafka:29092' >> .env
        echo KAFKA_CONSUMER_BASE_GROUP_ID='APP_CONSUMER_GROUP' >> .env
        echo MAIL_FROM='Batista' >> .env
        echo MAIL_SERVER='smtp.gmail.com' >> .env
        echo MAIL_PORT=465 >> .env
        echo MAIL_USERNAME='python.email.smtp.modules@gmail.com' >> .env
        echo MAIL_PASSWORD='mybdrznvpjktvhez' >> .env
        cat .env
    - name: Install app dependencies
      run: npm ci --legacy-peer-deps
    - name: Setup TERM variable
      run: export TERM
    # - name: Run tests
    #   run: npm run test:ci

  build:
    runs-on: ubuntu-latest
    needs: run_tests
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - run: ls
      - name: Compile TS into JS
        run: npm run build

  upload_image:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: mfa-ts-app
        path: ./dist
  
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: upload_image
  #   steps:
  #     - name: 